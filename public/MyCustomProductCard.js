import R from "react"; window.__MAKER_REACT__ = window.__MAKER_REACT__ || R; var n = window.__MAKER_REACT__; var c = "maker-nav-importmap", E = { imports: { react: "https://esm.sh/react@16.14.0", "react-dom": "https://esm.sh/react@16.14.0", "react/jsx-runtime": "https://esm.sh/react@16.14.0/jsx-runtime" } }, m = () => { if (typeof window > "u" || typeof document > "u" || document.getElementById(c)) return; let t = document.createElement("script"); t.innerHTML = JSON.stringify(E), t.type = "importmap", t.id = c, document.head.appendChild(t) }; var u = { REGISTERED: "maker-nav-component-registered", UNREGISTERED: "maker-nav-component-unregistered" }, p = class t { static instance; components = new Map; contentTypeMap = new Map; constructor() { typeof window > "u" || typeof document > "u" || (m(), window.__MAKER_NAV_COMPONENT_REGISTRY__ = { register: (e, o, r) => { this.components.set(o, { contentType: e, render: r }), this.contentTypeMap.has(e) || this.contentTypeMap.set(e, new Set), this.contentTypeMap.get(e).add(o), window.dispatchEvent(new CustomEvent(u.REGISTERED, { detail: { contentType: e, componentId: o } })) }, unregister: e => { let o = this.components.get(e); if (o) { let r = this.contentTypeMap.get(o.contentType); r && (r.delete(e), r.size === 0 && this.contentTypeMap.delete(o.contentType)), this.components.delete(e), window.dispatchEvent(new CustomEvent(u.UNREGISTERED, { detail: { componentId: e } })) } }, list: () => Array.from(this.components.entries()).map(([e, o]) => ({ componentId: e, contentType: o.contentType, render: o.render })) }) } static getInstance() { return t.instance || (t.instance = new t), t.instance } register(e, o, r) { this.isRegistryAvailable() && window.__MAKER_NAV_COMPONENT_REGISTRY__.register(e, o, r) } unregister(e) { this.isRegistryAvailable() && window.__MAKER_NAV_COMPONENT_REGISTRY__.unregister(e) } getRenderFunction(e) { return window.__MAKER_NAV_COMPONENT_REGISTRY__.list().find(o => o.componentId === e)?.render } isRegistryAvailable() { return typeof window < "u" && !!window.__MAKER_NAV_COMPONENT_REGISTRY__ } }, i = p.getInstance(); import { jsx as T } from "react/jsx-runtime"; var f = n.createContext({ renderImage: void 0, renderVideo: void 0 }), C = () => n.useContext(f); function l({ renderImage: t, renderVideo: e, children: o }) { return T(f.Provider, { value: { renderImage: t, renderVideo: e }, children: o }) } var s = { Provider: l, useContext: C }; import { jsx as _ } from "react/jsx-runtime"; var h = t => { let { renderImage: e } = s.useContext(); return typeof e == "function" ? e(t) : _("img", { src: t.src, alt: t.alt, loading: t.priority == 0 ? "eager" : "lazy", fetchpriority: t.priority == 0 ? "high" : "low", style: { objectFit: t.fit, objectPosition: "center", width: "100%", height: "100%", position: "absolute", top: 0, left: 0 } }) }, a = h; import { jsx as D } from "react/jsx-runtime"; import B from "react"; var y = class extends n.Component { state = { hasError: !1 }; static getDerivedStateFromError(e) { return { hasError: !0 } } componentDidCatch(e, o) { console.error("Error caught in ErrorBoundary:", e, o) } render() { return this.state.hasError ? this.props.fallback : this.props.children } }; import { jsx as W } from "react/jsx-runtime"; import { jsx as d, jsxs as g } from "react/jsx-runtime"; var P = t => { let [e, o] = n.useState(0), r = () => { o(e + 1) }; return g("div", { children: [d("div", { style: { position: "relative", aspectRatio: "16/9", width: "100%" }, children: d(a, { src: t.data.variants[0].imageLink, alt: t.data.title, fit: "cover", priority: 1 }) }), d("div", { children: t.data.title }), g("button", { onClick: r, children: ["Clicked ", e, " times"] })] }) }; i.register("product", "my-custom-product-card", P); export { P as Component };
